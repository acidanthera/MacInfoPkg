#!/usr/bin/python

"""
Update autogenerated source files from yaml database.

Copyright (c) 2019, vit9696
"""

from __future__ import print_function

import fnmatch
import operator
import os
import sys
import yaml

def load_db(dbpath):
  """
  Load yaml database and return in a list.
  """

  if not os.path.exists(dbpath):
    print("Cannot find %s directory, rerun from MacInfoPkg directory!" % dbpath)
    sys.exit(1)

  db = []

  for root, dirs, files in os.walk(dbpath):
    for file in fnmatch.filter(files, '*.yaml'):
      path = os.path.join(root, file)
      with open(path, 'r') as fh:
        try:
            db.append(yaml.safe_load(fh))
        except yaml.YAMLError as e:
            print("Failed to parse file %s - %s" % (path, e))
            sys.exit(1)

  if len(db) == 0:
    print("Empty database!")
    sys.exit(1)

  # Sorting is required for fast lookup.
  return sorted(db, key=operator.itemgetter('SystemProductName'))


def export_db_macinfo(db, path):
  """
  Export yaml database to MacInfoLib format.
  TODO: use jinja2?
  """

  with open(path, 'w') as fh:
    print('// DO NOT EDIT! This is an autogenerated file.', file=fh);
    print('#include "MacInfoInternal.h"', file=fh);
    print('CONST MAC_INFO_INTERNAL_ENTRY gMacInfoModels[] = {', file=fh);

    for info in db:
      print(' {\n'
        '  .SystemProductName = "%s",\n'
        '  .BoardProduct = "%s",\n'
        '  .BoardRevision = %s,\n'
        '  .SmcRevision = {%s},\n'
        '  .SmcBranch = {%s},\n'
        '  .SmcPlatform = {%s},\n'
        '  .BIOSVersion = "%s",\n'
        '  .BIOSReleaseDate = "%s",\n'
        '  .SystemVersion = "%s",\n'
        '  .SystemSKUNumber = "%s",\n'
        '  .SystemFamily = "%s",\n'
        '  .BoardVersion = "%s",\n'
        '  .BoardAssetTag = "%s",\n'
        '  .BoardLocationInChassis = "%s",\n'
        '  .SmcGeneration = 0x%X,\n'
        '  .BoardType = 0x%X,\n'
        '  .ChassisType = 0x%X,\n'
        '  .MemoryFormFactor = 0x%X,\n'
        '  .PlatformFeature = %s,\n'
        '  .ChassisAssetTag = "%s",\n'
        '  .FirmwareFeatures = 0x%XULL,\n'
        '  .FirmwareFeaturesMask = 0x%XULL,\n'
        ' },' % (
          info['SystemProductName'],
          info['BoardProduct'][0] if isinstance(info['BoardProduct'], list) else info['BoardProduct'],
          '0x{:X}'.format(info['BoardRevision']) if 'BoardRevision' in info else 'MAC_INFO_BOARD_REVISION_MISSING',
          ', '.join(map(str, info.get('SmcRevision', [0x00]))),
          ', '.join(map(str, info.get('SmcBranch', [0x00]))),
          ', '.join(map(str, info.get('SmcPlatform', [0x00]))),
          info['BIOSVersion'],
          info['BIOSReleaseDate'],
          info['SystemVersion'],
          info['SystemSKUNumber'],
          info['SystemFamily'],
          info['BoardVersion'],
          info['BoardAssetTag'],
          info['BoardLocationInChassis'],
          info['SmcGeneration'],
          info['BoardType'],
          info['ChassisType'],
          info['MemoryFormFactor'],
          '0x{:X}'.format(info['PlatformFeature']) if 'PlatformFeature' in info else 'MAC_INFO_PLATFORM_FEATURE_MISSING',
          info['ChassisAssetTag'],
          info.get('ExtendedFirmwareFeatures', info['FirmwareFeatures']),
          info.get('ExtendedFirmwareFeaturesMask', info['FirmwareFeaturesMask'])
        ), file=fh)

    print('};', file=fh);

    print('CONST UINTN gMacInfoModelCount = ARRAY_SIZE (gMacInfoModels);', file=fh)
    print('CONST UINTN gMacInfoDefaultModel = 0;', file=fh)


db = load_db('DataBase')
export_db_macinfo(db, 'Library/MacInfoLib/AutoGenerated.c')
